package Module3SubModules;

import Notifications.DesktopNotify;
import SystemInstance.MysqlConnect;
import java.awt.Color;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author iRHONman
 */
public class findings extends javax.swing.JFrame {

    Connection con = null;
    Statement stmt = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    CallableStatement cst = null;

    public findings() {
        initComponents();
        con = MysqlConnect.ConnectDB();
        consult();
        CurrentDate();
        select_diagnosis();
        tblconsultDone();
        pat_ID.setVisible(false);
        consult_id.setVisible(false);
        date_dayv2.setVisible(false);

    }
    patientHistory showdata = new patientHistory();

    public void consult() {

        try {
            String sql = "SELECT Count(findings_no)AS no FROM Core1_opd_consultationProgress";
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery(sql);

            while (rs.next()) {

                if (rs.first() == false) {
                    consult_id.setText("1");
                } else {
                    rs.last();
                    int auto_id = rs.getInt(1) + 1;
                    String no = String.valueOf(auto_id);
                    int nolong = no.length();
                    for (int a = 0; a < 3 - nolong; a++) {
                        no = "" + no;
                    }
                    consult_id.setText(no);
                }
            }

        } catch (Exception e) {
            System.out.println(e);

        }
    }

    private void select_diagnosis() {
        try {
            String sql = "select title from Core1_opd_treatmentmedicine";
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery(sql);

            while (rs.next()) {
                CB_type2.addItem(rs.getString("title"));
            }

        } catch (Exception e) {
        }
    }

    public void tblconsultDone() {

        try {
            String q = "select Patient_ID as ID,name as Patient, doctor_name as Doctor, specialization as Specialization ,bp as 'BLood presure',temp as Temperature,height as Height,weight as Weight,dateTime as 'As of' ,\n"
                    + "patient_illness as Symptoms,date_sysmptoms as Since, symp_desc as Description, diagnose as Diagnose ,diag_desc as Description, date_diagnose as 'Date diagnose',\n"
                    + "medicine,dosage,tablet,take,until as 'For',med_desc as 'Medicine description'\n"
                    + " from Core1_opd_consultationProgress where name ='" + find_patName.getText() + "'";
            // String q = "select * from Core1_opd_consultationProgres ";
            /* String q = "select name as Patient, doctor_name as Doctor, specialization as Specialization ,bp as 'BLood presure',dateTime as 'As of' ,\n" +
"patient_illness as Symptoms, symp_desc as Description, diagnose as Diagnose ,diag_desc as Description, date_diagnose as 'Date diagnose',\n" +
"medicine,dosage,tablet,take,until,med_desc as 'Medicine description'\n" +
" from Core1_opd_consultationProgress where name = 'nora puyaoanv'";*/
            pst = con.prepareStatement(q);

            rs = pst.executeQuery();
            tbl_view.setModel(DbUtils.resultSetToTableModel(rs));
            /*  tbl_view1.getColumnModel().getColumn(1).setPreferredWidth(20);
            tbl_view1.getColumnModel().getColumn(2).setPreferredWidth(15);
            tbl_view1.getColumnModel().getColumn(3).setPreferredWidth(15);
            tbl_view1.getColumnModel().getColumn(5).setPreferredWidth(15);
            tbl_view1.getColumnModel().getColumn(6).setPreferredWidth(20);*/

        } catch (Exception e) {
            System.out.println(e);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Findings_pnl = new javax.swing.JPanel();
        Change_GUI = new javax.swing.JPanel();
        CONSULTATION_PANEL = new javax.swing.JPanel();
        Treatment = new javax.swing.JPanel();
        medType = new javax.swing.JTextField();
        asterisk9 = new javax.swing.JLabel();
        asterisk3 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        asterisk5 = new javax.swing.JLabel();
        asterisk8 = new javax.swing.JLabel();
        asterisk4 = new javax.swing.JLabel();
        medDosage = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        take = new javax.swing.JTextField();
        CB_type1 = new javax.swing.JComboBox<>();
        medicineEnable = new javax.swing.JPanel();
        CB_type3 = new javax.swing.JComboBox<>();
        medicine = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        medicineDisable = new javax.swing.JPanel();
        CB_type4 = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        OthersDisableMed = new javax.swing.JPanel();
        othersMed = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        OthersEnableMed = new javax.swing.JPanel();
        othersMed2 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        asterisk7 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        nxt_vst = new com.toedter.calendar.JDateChooser();
        Diagnosis = new javax.swing.JPanel();
        asterisk2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        date_dayv2 = new javax.swing.JTextField();
        CB_type2 = new javax.swing.JComboBox<>();
        disable = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        otherD = new javax.swing.JTextField();
        enable = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        otherD2 = new javax.swing.JTextField();
        asterisk6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        Symptoms = new javax.swing.JPanel();
        asterisk1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        find_patSick = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        symptoms_date = new com.toedter.calendar.JDateChooser();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        History = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_view = new javax.swing.JTable();
        LABORATORY_PANEL = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox23 = new javax.swing.JCheckBox();
        jCheckBox24 = new javax.swing.JCheckBox();
        jCheckBox25 = new javax.swing.JCheckBox();
        jCheckBox26 = new javax.swing.JCheckBox();
        jCheckBox27 = new javax.swing.JCheckBox();
        jCheckBox28 = new javax.swing.JCheckBox();
        jCheckBox31 = new javax.swing.JCheckBox();
        jLabel55 = new javax.swing.JLabel();
        LMP = new com.toedter.calendar.JDateChooser();
        jPanel15 = new javax.swing.JPanel();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox29 = new javax.swing.JCheckBox();
        jCheckBox30 = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        jCheckBox41 = new javax.swing.JCheckBox();
        jCheckBox42 = new javax.swing.JCheckBox();
        jCheckBox43 = new javax.swing.JCheckBox();
        jPanel12 = new javax.swing.JPanel();
        jCheckBox32 = new javax.swing.JCheckBox();
        jCheckBox33 = new javax.swing.JCheckBox();
        jCheckBox34 = new javax.swing.JCheckBox();
        jCheckBox35 = new javax.swing.JCheckBox();
        jCheckBox36 = new javax.swing.JCheckBox();
        jCheckBox40 = new javax.swing.JCheckBox();
        jCheckBox46 = new javax.swing.JCheckBox();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        cb3 = new javax.swing.JComboBox<>();
        cb2 = new javax.swing.JComboBox<>();
        cb1 = new javax.swing.JComboBox<>();
        cb = new javax.swing.JComboBox<>();
        jPanel16 = new javax.swing.JPanel();
        jCheckBox37 = new javax.swing.JCheckBox();
        jCheckBox38 = new javax.swing.JCheckBox();
        jCheckBox39 = new javax.swing.JCheckBox();
        jPanel17 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        bmi = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        w = new javax.swing.JTextField();
        h = new javax.swing.JTextField();
        dd = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        consult_id = new javax.swing.JTextField();
        vs = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bt = new javax.swing.JTextField();
        bp = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        find_patName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        find_patAge = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        find_patGender = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        find_patNo = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        find_patDr = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        find_drSpecia = new javax.swing.JTextField();
        pat_ID = new javax.swing.JTextField();
        CB_type = new javax.swing.JComboBox<>();
        consultBtn = new javax.swing.JButton();
        labBtn = new javax.swing.JButton();
        jExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Findings_pnl.setBackground(new java.awt.Color(255, 255, 255));
        Findings_pnl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Findings_pnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Change_GUI.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CONSULTATION_PANEL.setBackground(new java.awt.Color(255, 255, 255));
        CONSULTATION_PANEL.setLayout(null);

        Treatment.setBackground(new java.awt.Color(240, 240, 240));
        Treatment.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Treatment.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        medType.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medType.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        medType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                medTypeKeyReleased(evt);
            }
        });
        Treatment.add(medType, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 70, 30));

        asterisk9.setBackground(new java.awt.Color(255, 255, 255));
        asterisk9.setFont(new java.awt.Font("Arial", 3, 9)); // NOI18N
        asterisk9.setForeground(new java.awt.Color(204, 0, 0));
        Treatment.add(asterisk9, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 160, 30));

        asterisk3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        asterisk3.setForeground(new java.awt.Color(204, 0, 0));
        Treatment.add(asterisk3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 230, 20));

        jLabel28.setText("For");
        Treatment.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 20, 30));

        jLabel27.setText("Take every");
        Treatment.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, -1, 30));

        jLabel30.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("-");
        Treatment.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 10, 30));

        jLabel25.setText("Dosage");
        Treatment.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, 30));

        asterisk5.setBackground(new java.awt.Color(255, 255, 255));
        asterisk5.setFont(new java.awt.Font("Arial", 3, 9)); // NOI18N
        asterisk5.setForeground(new java.awt.Color(204, 0, 0));
        Treatment.add(asterisk5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 90, 30));

        asterisk8.setBackground(new java.awt.Color(255, 255, 255));
        asterisk8.setFont(new java.awt.Font("Arial", 3, 9)); // NOI18N
        asterisk8.setForeground(new java.awt.Color(204, 0, 0));
        asterisk8.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                asterisk8AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        asterisk8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                asterisk8MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                asterisk8MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                asterisk8MouseReleased(evt);
            }
        });
        asterisk8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                asterisk8KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                asterisk8KeyReleased(evt);
            }
        });
        Treatment.add(asterisk8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, 90, 30));

        asterisk4.setBackground(new java.awt.Color(255, 255, 255));
        asterisk4.setFont(new java.awt.Font("Arial", 3, 9)); // NOI18N
        asterisk4.setForeground(new java.awt.Color(204, 0, 0));
        Treatment.add(asterisk4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 90, 30));

        medDosage.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medDosage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        medDosage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medDosageActionPerformed(evt);
            }
        });
        medDosage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                medDosageKeyReleased(evt);
            }
        });
        Treatment.add(medDosage, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 90, 30));

        jPanel6.setBackground(new java.awt.Color(3, 131, 140));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Prescription");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Treatment.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 520, -1));

        take.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        take.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        take.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                takeKeyReleased(evt);
            }
        });
        Treatment.add(take, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 90, 30));

        CB_type1.setMaximumRowCount(9);
        CB_type1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Set day", "1 day", "2 days", "3 days", "4 days", "5 days", "6 days", "7 days", "15 days", "30 days" }));
        Treatment.add(CB_type1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, 90, 30));

        medicineEnable.setBackground(new java.awt.Color(240, 240, 240));
        medicineEnable.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CB_type3.setMaximumRowCount(9);
        CB_type3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Others" }));
        medicineEnable.add(CB_type3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 90, 30));

        medicine.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medicine.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        medicineEnable.add(medicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 90, 30));

        jLabel26.setText("Medicine");
        medicineEnable.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 30));

        Treatment.add(medicineEnable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 140, 30));

        medicineDisable.setBackground(new java.awt.Color(240, 240, 240));

        CB_type4.setEditable(true);
        CB_type4.setMaximumRowCount(9);
        CB_type4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Others" }));
        CB_type4.setEnabled(false);
        CB_type4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_type4ActionPerformed(evt);
            }
        });

        jLabel33.setText("Medicine");

        javax.swing.GroupLayout medicineDisableLayout = new javax.swing.GroupLayout(medicineDisable);
        medicineDisable.setLayout(medicineDisableLayout);
        medicineDisableLayout.setHorizontalGroup(
            medicineDisableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, medicineDisableLayout.createSequentialGroup()
                .addGap(0, 50, Short.MAX_VALUE)
                .addComponent(CB_type4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(medicineDisableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(medicineDisableLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel33)
                    .addGap(0, 99, Short.MAX_VALUE)))
        );
        medicineDisableLayout.setVerticalGroup(
            medicineDisableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, medicineDisableLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(CB_type4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(medicineDisableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(medicineDisableLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        Treatment.add(medicineDisable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 140, 30));

        OthersDisableMed.setBackground(new java.awt.Color(240, 240, 240));

        othersMed.setBackground(new java.awt.Color(204, 204, 204));
        othersMed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        othersMed.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        othersMed.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        othersMed.setEnabled(false);

        jLabel29.setText("Others:");

        javax.swing.GroupLayout OthersDisableMedLayout = new javax.swing.GroupLayout(OthersDisableMed);
        OthersDisableMed.setLayout(OthersDisableMedLayout);
        OthersDisableMedLayout.setHorizontalGroup(
            OthersDisableMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OthersDisableMedLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel29)
                .addGap(13, 13, 13)
                .addComponent(othersMed, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        OthersDisableMedLayout.setVerticalGroup(
            OthersDisableMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OthersDisableMedLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(OthersDisableMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(othersMed, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Treatment.add(OthersDisableMed, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 140, 30));

        OthersEnableMed.setBackground(new java.awt.Color(240, 240, 240));
        OthersEnableMed.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        othersMed2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        othersMed2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        othersMed2.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        othersMed2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                othersMed2ActionPerformed(evt);
            }
        });
        OthersEnableMed.add(othersMed2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 90, 30));

        jLabel36.setText("Others:");
        OthersEnableMed.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 30));

        asterisk7.setBackground(new java.awt.Color(255, 255, 255));
        asterisk7.setFont(new java.awt.Font("Arial", 3, 9)); // NOI18N
        asterisk7.setForeground(new java.awt.Color(204, 0, 0));
        OthersEnableMed.add(asterisk7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 90, 30));

        Treatment.add(OthersEnableMed, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 140, 30));

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Medicine description", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jTextArea3.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextArea3AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTextArea3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextArea3KeyReleased(evt);
            }
        });
        jScrollPane6.setViewportView(jTextArea3);

        Treatment.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 470, 110));

        nxt_vst.setBackground(new java.awt.Color(255, 255, 255));
        nxt_vst.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nxt_vst.setPreferredSize(new java.awt.Dimension(250, 42));
        nxt_vst.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                nxt_vstAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        nxt_vst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nxt_vstMousePressed(evt);
            }
        });
        Treatment.add(nxt_vst, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 160, 30));

        CONSULTATION_PANEL.add(Treatment);
        Treatment.setBounds(390, 230, 520, 240);

        Diagnosis.setBackground(new java.awt.Color(240, 240, 240));
        Diagnosis.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Diagnosis.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        asterisk2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        asterisk2.setForeground(new java.awt.Color(204, 0, 0));
        asterisk2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                asterisk2AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        Diagnosis.add(asterisk2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 200, 20));

        jLabel16.setText("Diagnosis Title:");
        Diagnosis.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 30));

        jPanel2.setBackground(new java.awt.Color(3, 131, 140));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Diagnostics");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Diagnosis.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 370, -1));

        date_dayv2.setEditable(false);
        date_dayv2.setBackground(new java.awt.Color(255, 255, 255));
        date_dayv2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        date_dayv2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Diagnosis.add(date_dayv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 140, 30));

        CB_type2.setMaximumRowCount(9);
        CB_type2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose", "Others" }));
        CB_type2.setToolTipText("Pllease select OTHERS if the diagnosis is not found");
        CB_type2.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                CB_type2PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        CB_type2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_type2ActionPerformed(evt);
            }
        });
        Diagnosis.add(CB_type2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 100, 30));

        disable.setBackground(new java.awt.Color(240, 240, 240));
        disable.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setText("Others:");
        disable.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, -1, 30));

        otherD.setBackground(new java.awt.Color(204, 204, 204));
        otherD.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        otherD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        otherD.setEnabled(false);
        disable.add(otherD, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 5, 90, 30));

        Diagnosis.add(disable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 160, 40));

        enable.setBackground(new java.awt.Color(240, 240, 240));
        enable.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setText("Others:");
        enable.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, -1, 30));

        otherD2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        otherD2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        otherD2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                otherD2KeyReleased(evt);
            }
        });
        enable.add(otherD2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 5, 90, 30));

        asterisk6.setFont(new java.awt.Font("Arial", 3, 9)); // NOI18N
        asterisk6.setForeground(new java.awt.Color(204, 0, 0));
        asterisk6.setPreferredSize(new java.awt.Dimension(4, 18));
        enable.add(asterisk6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 90, 20));

        Diagnosis.add(enable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 160, 40));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Diagnosis description", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jTextArea2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextArea2AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTextArea2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextArea2KeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(jTextArea2);

        Diagnosis.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 310, 120));

        CONSULTATION_PANEL.add(Diagnosis);
        Diagnosis.setBounds(10, 230, 370, 240);

        Symptoms.setBackground(new java.awt.Color(240, 240, 240));
        Symptoms.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Symptoms.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        asterisk1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        asterisk1.setForeground(new java.awt.Color(204, 0, 0));
        Symptoms.add(asterisk1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 240, 20));

        jLabel20.setText("Since:");
        Symptoms.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 40, 30));

        find_patSick.setEditable(false);
        find_patSick.setBackground(new java.awt.Color(255, 255, 255));
        find_patSick.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        find_patSick.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Symptoms.add(find_patSick, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 42, 80, 30));

        jPanel3.setBackground(new java.awt.Color(3, 131, 140));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Symptoms");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        Symptoms.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 400, -1));

        symptoms_date.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                symptoms_dateAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        symptoms_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                symptoms_dateKeyPressed(evt);
            }
        });
        Symptoms.add(symptoms_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(237, 42, 120, 30));

        jLabel31.setText("Symptoms Title:");
        Symptoms.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 30));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Symptoms description", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jTextArea1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextArea1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextArea1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        Symptoms.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 340, 130));

        CONSULTATION_PANEL.add(Symptoms);
        Symptoms.setBounds(10, 0, 400, 220);

        History.setBackground(new java.awt.Color(240, 240, 240));
        History.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        History.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(3, 131, 140));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setText("(*Click table to view the detailed history)");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 280, 30));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Medical records history");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));

        History.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, -1));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(null);

        tbl_view.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbl_view.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tbl_view.setForeground(new java.awt.Color(51, 51, 51));
        tbl_view.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_view.setToolTipText("Select one of history to view the medical records of patient");
        tbl_view.setGridColor(new java.awt.Color(255, 255, 255));
        tbl_view.setRowHeight(20);
        tbl_view.setSelectionBackground(new java.awt.Color(0, 171, 82));
        tbl_view.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tbl_viewAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tbl_view.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_viewMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_view);

        History.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 470, 130));

        CONSULTATION_PANEL.add(History);
        History.setBounds(440, 20, 470, 180);

        Change_GUI.add(CONSULTATION_PANEL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 480));

        LABORATORY_PANEL.setBackground(new java.awt.Color(255, 255, 255));
        LABORATORY_PANEL.setLayout(null);

        jPanel14.setBackground(new java.awt.Color(240, 240, 240));
        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Blood Chemisitry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCheckBox10.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox10.setText("FBS");
        jPanel14.add(jCheckBox10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jCheckBox11.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox11.setText("HbA1C");
        jPanel14.add(jCheckBox11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jCheckBox12.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox12.setText("BUN");
        jPanel14.add(jCheckBox12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jCheckBox14.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox14.setText("BUA");
        jPanel14.add(jCheckBox14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jCheckBox15.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox15.setText("Creatinine");
        jPanel14.add(jCheckBox15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jCheckBox16.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox16.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox16.setText("Lipid Profile");
        jPanel14.add(jCheckBox16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jCheckBox17.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox17.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox17.setText("SGPT/SGOT");
        jPanel14.add(jCheckBox17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        jCheckBox19.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox19.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox19.setText("OGTT 75gm");
        jPanel14.add(jCheckBox19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jCheckBox21.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox21.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox21.setText("OGCT 50gm");
        jPanel14.add(jCheckBox21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        LABORATORY_PANEL.add(jPanel14);
        jPanel14.setBounds(220, 10, 160, 220);

        jPanel5.setBackground(new java.awt.Color(240, 240, 240));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Microscopy", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCheckBox22.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox22.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox22.setText("Urine Pregtest");
        jPanel5.add(jCheckBox22, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, -1));

        jCheckBox23.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox23.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox23.setText("Fecalysis");
        jPanel5.add(jCheckBox23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jCheckBox24.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox24.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox24.setText("Stool Occult blood");
        jPanel5.add(jCheckBox24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jCheckBox25.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox25.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox25.setText("Urine Culture & Sensitivity");
        jPanel5.add(jCheckBox25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jCheckBox26.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox26.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox26.setText("AFB Smear");
        jPanel5.add(jCheckBox26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jCheckBox27.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox27.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox27.setText("Lipid Profile");
        jPanel5.add(jCheckBox27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jCheckBox28.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox28.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox28.setText("PAP smear");
        jPanel5.add(jCheckBox28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        jCheckBox31.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox31.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox31.setText("Urinalysis");
        jPanel5.add(jCheckBox31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel55.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel55.setText("LMP:");
        jPanel5.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 30, 20));
        jPanel5.add(LMP, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 140, -1));

        LABORATORY_PANEL.add(jPanel5);
        jPanel5.setBounds(400, 10, 290, 170);

        jPanel15.setBackground(new java.awt.Color(240, 240, 240));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Electrolytes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCheckBox13.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox13.setText("Sodium");
        jPanel15.add(jCheckBox13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jCheckBox20.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox20.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox20.setText("Potassium");
        jPanel15.add(jCheckBox20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jCheckBox29.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox29.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox29.setText("Calcium (Total/Ionized)");
        jPanel15.add(jCheckBox29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jCheckBox30.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox30.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox30.setText("Magnesium");
        jPanel15.add(jCheckBox30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        LABORATORY_PANEL.add(jPanel15);
        jPanel15.setBounds(710, 60, 170, 110);

        jPanel11.setBackground(new java.awt.Color(240, 240, 240));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Serology", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCheckBox41.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox41.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox41.setText("ASO");
        jPanel11.add(jCheckBox41, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jCheckBox42.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox42.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox42.setText("ESR");
        jPanel11.add(jCheckBox42, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jCheckBox43.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox43.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox43.setText("PSA");
        jPanel11.add(jCheckBox43, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        LABORATORY_PANEL.add(jPanel11);
        jPanel11.setBounds(460, 200, 180, 100);

        jPanel12.setBackground(new java.awt.Color(240, 240, 240));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Radiology", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCheckBox32.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox32.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox32.setText("ECG");
        jPanel12.add(jCheckBox32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 70, -1));

        jCheckBox33.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox33.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox33.setText("Chest X-Ray");
        jPanel12.add(jCheckBox33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jCheckBox34.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox34.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox34.setText("X-Ray");
        jPanel12.add(jCheckBox34, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jCheckBox35.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox35.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox35.setText("Ultrasound");
        jPanel12.add(jCheckBox35, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jCheckBox36.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox36.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox36.setText("2D Echo  with Doppler Study");
        jPanel12.add(jCheckBox36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jCheckBox40.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox40.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox40.setText("Treadmill Stress Test");
        jPanel12.add(jCheckBox40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jCheckBox46.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox46.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox46.setText("Spirometry");
        jCheckBox46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox46ActionPerformed(evt);
            }
        });
        jPanel12.add(jCheckBox46, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        jLabel56.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel56.setText("Protocol:");
        jPanel12.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 60, 20));

        jLabel57.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel57.setText("View:");
        jPanel12.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 40, 20));

        cb3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Stage 1: 1.7 mph and 10% gradient", "Stage 2: 2.5 mph and 12% gradient", "Stage 3: 3.4 mph and 14% gradient" }));
        cb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb3ActionPerformed(evt);
            }
        });
        jPanel12.add(cb3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 250, -1));

        cb2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Transvaginal Scans", "Standard Ultrasound", "Advanced Ultrasound", "Doppler Ultrasound", "3-D Ultrasound", "4-D or Dynamic 3-D Ultrasound", "Fetal Echocardiography" }));
        cb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb2ActionPerformed(evt);
            }
        });
        jPanel12.add(cb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 240, -1));

        cb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bone cancer", "Breast tumors", "Enlarged heart", "Blocked blood vessels", "Conditions affecting your lungs", "Digestive problems", "Fractures", "Infections", "Osteoporosis", "Arthritis", "Tooth decay", "Needing to retrieve swallowed items" }));
        cb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb1ActionPerformed(evt);
            }
        });
        jPanel12.add(cb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 240, -1));

        cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cough", "Shortness of breath", "Chest pain", "Poor oxygenation (hypoxia)", "Back pain", "Chest injury", "Fever", "Abnormal heart sounds,", "Abnormal lung sounds,", "Chest wall deformity", "abnormal chest X-ray test" }));
        cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbActionPerformed(evt);
            }
        });
        jPanel12.add(cb, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 240, -1));

        LABORATORY_PANEL.add(jPanel12);
        jPanel12.setBounds(10, 240, 430, 230);

        jPanel16.setBackground(new java.awt.Color(240, 240, 240));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Thyroid Function Test", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCheckBox37.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox37.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox37.setText("TSH");
        jPanel16.add(jCheckBox37, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jCheckBox38.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox38.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox38.setText("FT3");
        jPanel16.add(jCheckBox38, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jCheckBox39.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox39.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox39.setText("FT4");
        jPanel16.add(jCheckBox39, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        LABORATORY_PANEL.add(jPanel16);
        jPanel16.setBounds(670, 200, 190, 100);

        jPanel17.setBackground(new java.awt.Color(240, 240, 240));
        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hematology", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCheckBox1.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox1.setText("CBC with Platelet");
        jPanel17.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jCheckBox2.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox2.setText("Peripheral smear");
        jPanel17.add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jCheckBox3.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox3.setText("Retic Count");
        jPanel17.add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jCheckBox4.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox4.setText("Blood Typing");
        jPanel17.add(jCheckBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jCheckBox5.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox5.setText("Clotting/Bleeding Time");
        jPanel17.add(jCheckBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jCheckBox6.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox6.setText("Proctime/Prothrombin");
        jPanel17.add(jCheckBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jCheckBox7.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox7.setText("HbsAg");
        jPanel17.add(jCheckBox7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        jCheckBox8.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox8.setText("Heap Profile");
        jPanel17.add(jCheckBox8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));

        jCheckBox9.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox9.setText("Serum Pregtest");
        jPanel17.add(jCheckBox9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jCheckBox18.setBackground(new java.awt.Color(240, 240, 240));
        jCheckBox18.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox18.setText("VDRL/RPR (quali)");
        jPanel17.add(jCheckBox18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 163, -1, 20));

        LABORATORY_PANEL.add(jPanel17);
        jPanel17.setBounds(10, 10, 200, 220);

        jPanel10.setBackground(new java.awt.Color(240, 240, 240));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Others", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jTextArea7.setColumns(20);
        jTextArea7.setRows(5);
        jScrollPane9.setViewportView(jTextArea7);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addContainerGap())
        );

        LABORATORY_PANEL.add(jPanel10);
        jPanel10.setBounds(460, 340, 420, 90);

        Change_GUI.add(LABORATORY_PANEL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 480));

        Findings_pnl.add(Change_GUI, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 920, 480));

        jSeparator1.setBackground(new java.awt.Color(3, 131, 140));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        Findings_pnl.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 20, 430));

        bmi.setBackground(new java.awt.Color(240, 240, 240));
        bmi.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Initial Weight - Height", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        bmi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setText("Weight:");
        bmi.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLabel21.setText("Height:");
        bmi.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        w.setEditable(false);
        w.setBackground(new java.awt.Color(255, 255, 255));
        w.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        w.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bmi.add(w, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 60, -1));

        h.setEditable(false);
        h.setBackground(new java.awt.Color(255, 255, 255));
        h.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        h.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bmi.add(h, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 60, -1));

        dd.setEditable(false);
        dd.setBackground(new java.awt.Color(255, 255, 255));
        dd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bmi.add(dd, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 120, -1));

        jLabel35.setText("As of:");
        bmi.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, -1, 30));

        consult_id.setBackground(new java.awt.Color(0, 102, 102));
        consult_id.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        consult_id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        consult_id.setEnabled(false);
        bmi.add(consult_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 40, 30));

        Findings_pnl.add(bmi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 290, 100));

        vs.setBackground(new java.awt.Color(240, 240, 240));
        vs.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Vital signs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        vs.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setText("Body temperature:");
        vs.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 110, -1));

        jLabel7.setText("Blood presusre:");
        vs.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 90, -1));

        bt.setEditable(false);
        bt.setBackground(new java.awt.Color(255, 255, 255));
        bt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        vs.add(bt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 60, -1));

        bp.setEditable(false);
        bp.setBackground(new java.awt.Color(255, 255, 255));
        bp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        bp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        vs.add(bp, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 60, -1));

        Findings_pnl.add(vs, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 230, 100));

        jPanel8.setBackground(new java.awt.Color(240, 240, 240));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Patient Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        find_patName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.add(find_patName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 170, -1));

        jLabel3.setText("Name:");
        jPanel8.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 40, -1));

        jLabel13.setText("Age:");
        jPanel8.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 40, -1));

        find_patAge.setEditable(false);
        find_patAge.setBackground(new java.awt.Color(255, 255, 255));
        find_patAge.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        find_patAge.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.add(find_patAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 50, -1));

        jLabel4.setText("Gender:");
        jPanel8.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        find_patGender.setEditable(false);
        find_patGender.setBackground(new java.awt.Color(255, 255, 255));
        find_patGender.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        find_patGender.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.add(find_patGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 49, -1));

        jLabel15.setText("Contact no.");
        jPanel8.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        find_patNo.setEditable(false);
        find_patNo.setBackground(new java.awt.Color(255, 255, 255));
        find_patNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        find_patNo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.add(find_patNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 87, -1));

        jLabel17.setText("Doctor: ");
        jPanel8.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        find_patDr.setEditable(false);
        find_patDr.setBackground(new java.awt.Color(255, 255, 255));
        find_patDr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        find_patDr.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.add(find_patDr, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 102, -1));

        jLabel18.setText("Specialization");
        jPanel8.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        find_drSpecia.setEditable(false);
        find_drSpecia.setBackground(new java.awt.Color(255, 255, 255));
        find_drSpecia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        find_drSpecia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.add(find_drSpecia, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 102, -1));

        pat_ID.setEditable(false);
        pat_ID.setBackground(new java.awt.Color(255, 255, 255));
        pat_ID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pat_ID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pat_ID.setEnabled(false);
        pat_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pat_IDActionPerformed(evt);
            }
        });
        jPanel8.add(pat_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 40, 30));

        Findings_pnl.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 290, 230));

        jPanel1.add(Findings_pnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 1250, 490));

        CB_type.setBackground(new java.awt.Color(1, 119, 129));
        CB_type.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        CB_type.setForeground(new java.awt.Color(255, 255, 255));
        CB_type.setMaximumRowCount(2);
        CB_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consultation", "Request Laboratory" }));
        CB_type.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                CB_typeAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        CB_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_typeActionPerformed(evt);
            }
        });
        jPanel1.add(CB_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 30, 160, 30));

        consultBtn.setBackground(new java.awt.Color(0, 102, 102));
        consultBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        consultBtn.setText("Add medical records");
        consultBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        consultBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultBtnActionPerformed(evt);
            }
        });
        jPanel1.add(consultBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 570, 180, 30));

        labBtn.setBackground(new java.awt.Color(0, 102, 102));
        labBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labBtn.setText("Send request");
        labBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        labBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labBtnActionPerformed(evt);
            }
        });
        jPanel1.add(labBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 570, 180, 30));

        jExit.setBackground(new java.awt.Color(0, 102, 102));
        jExit.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jExit.setText("Exit");
        jExit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jExit.setPreferredSize(new java.awt.Dimension(83, 25));
        jExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExitActionPerformed(evt);
            }
        });
        jPanel1.add(jExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 570, 180, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_viewAncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_tbl_viewAncestorAdded
    {//GEN-HEADEREND:event_tbl_viewAncestorAdded
        tblconsultDone();
    }//GEN-LAST:event_tbl_viewAncestorAdded

    private void tbl_viewMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_tbl_viewMouseClicked
    {//GEN-HEADEREND:event_tbl_viewMouseClicked
        boolean a = tbl_view.isEditing();

        if (a == false) {
            JOptionPane.showMessageDialog(null, "You can not edit this table");
        }

        try {
            int i = tbl_view.getSelectedRow();

            TableModel model = tbl_view.getModel();

            String fn = model.getValueAt(i, 0).toString();
            String dr = model.getValueAt(i, 1).toString();
            String sp = model.getValueAt(i, 2).toString();
            String bp = model.getValueAt(i, 3).toString();
            String bt = model.getValueAt(i, 4).toString();
            String h = model.getValueAt(i, 5).toString();
            String w = model.getValueAt(i, 6).toString();
            String dd = model.getValueAt(i, 7).toString();
            String sick = model.getValueAt(i, 8).toString();
            String sick_desc = model.getValueAt(i, 9).toString();
            String sick_date = model.getValueAt(i, 10).toString();
            String diagnose = model.getValueAt(i, 11).toString();
            String diagnose_desc = model.getValueAt(i, 12).toString();
            String diagnose_date = model.getValueAt(i, 13).toString();
            String medicine = model.getValueAt(i, 14).toString();
            String dosage = model.getValueAt(i, 15).toString();
            String tablet = model.getValueAt(i, 16).toString();
            String take_medicine = model.getValueAt(i, 17).toString();
            String take_for = model.getValueAt(i, 18).toString();
            String medicine_desc = model.getValueAt(i, 19).toString();

            showdata.setVisible(true);
            showdata.pack();
            showdata.setLocationRelativeTo(null);
            showdata.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

            showdata.find_patName.setText(fn);

            showdata.find_patDr.setText(dr);
            showdata.find_drSpecia.setText(sp);
            showdata.find_patSick.setText(sick);
            showdata.bp.setText(bp);
            showdata.bt.setText(bt);
            showdata.w.setText(h);
            showdata.h.setText(w);
            showdata.dd.setText(dd);
            showdata.find_patSick.setText(sick);
            showdata.jTextArea1.setText(sick_date);
            showdata.find_dd.setText(sick_desc);
            showdata.find_diag.setText(diagnose);
            showdata.diag_dd.setText(diagnose_date);
            showdata.jTextArea2.setText(diagnose_desc);
            showdata.medicine.setText(medicine);
            showdata.medDosage.setText(dosage);
            showdata.medType.setText(tablet);
            showdata.take.setText(take_medicine);
            showdata.find_for.setText(take_for);
            showdata.jTextArea3.setText(medicine_desc);

        } catch (Exception err) {
            JOptionPane.showConfirmDialog(null, err);

        }
    }//GEN-LAST:event_tbl_viewMouseClicked
    public void CurrentDate() {
        Calendar cal = new GregorianCalendar();
        int month1 = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        int min = cal.get(Calendar.MINUTE);

        int hour = cal.get(Calendar.HOUR);
        int AM_PM = cal.get(Calendar.AM_PM);

        int month = month1 + 1;

        String day_night = "";

        if (AM_PM == 1) {
            day_night = "PM";
        } else {
            day_night = "AM";
        }
        String weekday = "";
        if (hour == 0) {
            hour = 12;
        }

        String mn = null;
        switch (min) {
            case 0:
                mn = "0" + min;
                break;
            case 1:
                mn = "0" + min;
                break;
            case 2:
                mn = "0" + min;
                break;
            case 3:
                mn = "0" + min;
                break;
            case 4:
                mn = "0" + min;
                break;
            case 5:
                mn = "0" + min;
                break;
            case 6:
                mn = "0" + min;
                break;
            case 7:
                mn = "0" + min;
                break;
            case 8:
                mn = "0" + min;
                break;
            case 9:
                mn = "0" + min;
                break;
            default:
                mn = "" + min;
                break;
        }

        String day1;
        if (day == 1) {
            day1 = "0" + day;
        } else if (day == 1) {
            day1 = "0" + day;
        } else if (day == 2) {
            day1 = "0" + day;
        } else if (day == 3) {
            day1 = "0" + day;
        } else if (day == 4) {
            day1 = "0" + day;
        } else if (day == 5) {
            day1 = "0" + day;
        } else if (day == 6) {
            day1 = "0" + day;
        } else if (day == 7) {
            day1 = "0" + day;
        } else if (day == 8) {
            day1 = "0" + day;
        } else if (day == 9) {
            day1 = "0" + day;
        } else {
            day1 = "" + day;
        }

        String buwan;
        if (month == 1) {
            buwan = "0" + month;
        } else if (month1 == 1) {
            buwan = "0" + month;
        } else if (month1 == 2) {
            buwan = "0" + month;
        } else if (month1 == 3) {
            buwan = "0" + month;
        } else if (month1 == 4) {
            buwan = "0" + month;
        } else if (month1 == 5) {
            buwan = "0" + month;
        } else if (month1 == 6) {
            buwan = "0" + month;
        } else if (month1 == 7) {
            buwan = "0" + month;
        } else if (month1 == 8) {
            buwan = "0" + month;
        } else {
            buwan = "" + month;
        }

        //txt_date.setText(+hour+":"+minute+" "+day_night+", "+month+"/"+(day)+"/"+year);
        date_dayv2.setText((buwan) + "/" + (day1) + "/" + year);
        dd.setText((buwan) + "/" + (day1) + "/" + year);

    }
    private void jExitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jExitActionPerformed
    {//GEN-HEADEREND:event_jExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jExitActionPerformed

    private void symptoms_dateKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_symptoms_dateKeyPressed
    {//GEN-HEADEREND:event_symptoms_dateKeyPressed

    }//GEN-LAST:event_symptoms_dateKeyPressed

    private void symptoms_dateAncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_symptoms_dateAncestorAdded
    {//GEN-HEADEREND:event_symptoms_dateAncestorAdded
        symptoms_date.setDateFormatString("MM/dd/yyyy");
    }//GEN-LAST:event_symptoms_dateAncestorAdded

    private void CB_type2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CB_type2ActionPerformed
    {//GEN-HEADEREND:event_CB_type2ActionPerformed

        if (CB_type2.getSelectedItem().equals("Others: ")) {
            enable.setVisible(true);
            OthersEnableMed.setVisible(true);
            medicineDisable.setVisible(true);
            disable.setVisible(false);
            OthersDisableMed.setVisible(false);
            medicineEnable.setVisible(false);
            jTextArea2.setText("");
            jTextArea3.setText("");
            medDosage.setText("");
            medType.setText("");
            take.setText("");
            CB_type1.setSelectedIndex(0);
            CB_type3.setSelectedIndex(0);

        } else {
            disable.setVisible(true);
            OthersDisableMed.setVisible(true);
            medicineEnable.setVisible(true);
            enable.setVisible(false);
            OthersEnableMed.setVisible(false);
            medicineDisable.setVisible(false);
            othersMed2.setText("");

        }
    }//GEN-LAST:event_CB_type2ActionPerformed

    private void CB_type2PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt)//GEN-FIRST:event_CB_type2PopupMenuWillBecomeInvisible
    {//GEN-HEADEREND:event_CB_type2PopupMenuWillBecomeInvisible
        String diagnose = (String) CB_type2.getSelectedItem();
//       String sql = "select diagnose_description,medicine,dosage,medicine_type,take,medicine_description"
//               + "from  Core1_opd_treatmentmedicine where title = ?";

        String sql = "select * from  Core1_opd_treatmentmedicine where title = ?";
        try {
            pst = con.prepareStatement(sql);
            pst.setString(1, diagnose);
            rs = pst.executeQuery();
            if (rs.next()) {
                String add1 = rs.getString("diagnose_description");
                jTextArea2.setText(add1);
                String add2 = rs.getString("medicine");
                CB_type3.addItem(add2);
                CB_type3.setSelectedItem(add2);
                String add3 = rs.getString("dosage");
                medDosage.setText(add3);

                String add4 = rs.getString("medicine_type");
                medType.setText(add4);
                String add5 = rs.getString("take");
                take.setText(add5);
                String add6 = rs.getString("medicine_description");
                jTextArea3.setText(add6);
            }
        } catch (Exception err) {
            JOptionPane.showMessageDialog(null, err);
        }
    }//GEN-LAST:event_CB_type2PopupMenuWillBecomeInvisible

    private void jTextArea1KeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextArea1KeyReleased
    {//GEN-HEADEREND:event_jTextArea1KeyReleased
        asterisk1.setText("");
    }//GEN-LAST:event_jTextArea1KeyReleased

    private void jTextArea2KeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextArea2KeyReleased
    {//GEN-HEADEREND:event_jTextArea2KeyReleased
        asterisk2.setText("");
    }//GEN-LAST:event_jTextArea2KeyReleased

    private void jTextArea3KeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextArea3KeyReleased
    {//GEN-HEADEREND:event_jTextArea3KeyReleased
        asterisk3.setText("");
    }//GEN-LAST:event_jTextArea3KeyReleased

    private void asterisk2AncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_asterisk2AncestorAdded
    {//GEN-HEADEREND:event_asterisk2AncestorAdded
    }//GEN-LAST:event_asterisk2AncestorAdded

    private void jTextArea2AncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_jTextArea2AncestorAdded
    {//GEN-HEADEREND:event_jTextArea2AncestorAdded
        jTextArea2.setLineWrap(true);
        jTextArea2.setWrapStyleWord(true);
    }//GEN-LAST:event_jTextArea2AncestorAdded

    private void jTextArea3AncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_jTextArea3AncestorAdded
    {//GEN-HEADEREND:event_jTextArea3AncestorAdded
        jTextArea3.setLineWrap(true);
        jTextArea3.setWrapStyleWord(true);
    }//GEN-LAST:event_jTextArea3AncestorAdded

    private void medDosageKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_medDosageKeyReleased
    {//GEN-HEADEREND:event_medDosageKeyReleased
        asterisk4.setText("");

        asterisk4.setVisible(false);

    }//GEN-LAST:event_medDosageKeyReleased

    private void takeKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_takeKeyReleased
    {//GEN-HEADEREND:event_takeKeyReleased
        asterisk5.setText("");

        asterisk5.setVisible(false);
    }//GEN-LAST:event_takeKeyReleased

    private void consultBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_consultBtnActionPerformed
    {//GEN-HEADEREND:event_consultBtnActionPerformed

        String a = this.jTextArea1.getText();
        String b = this.jTextArea2.getText();
        String c = this.jTextArea3.getText();
        String d = this.medDosage.getText();
        String e = this.take.getText();
        String f = this.otherD2.getText();
        String g = this.othersMed2.getText();

        if (a.isEmpty()) {
            DesktopNotify.showDesktopMessage("INPUT MISSING...", "Please get symptoms description of patient " + find_patName.getText(),
                    DesktopNotify.INPUT_REQUEST, 8000);
            asterisk1.setText("Enter symptoms description");
        } else if (b.isEmpty()) {
            DesktopNotify.showDesktopMessage("INPUT MISSING...", "Please provide diagnosis description of patient " + find_patName.getText(),
                    DesktopNotify.INPUT_REQUEST, 8000);
            asterisk2.setText("Enter diagnosis description");
        } else if (c.isEmpty()) {
            DesktopNotify.showDesktopMessage("INPUT MISSING...", "Please provide medicine description of patient " + find_patName.getText(),
                    DesktopNotify.INPUT_REQUEST, 8000);
            asterisk3.setText("Enter medicine description");

        } else if (d.isEmpty()) {
            DesktopNotify.showDesktopMessage("INPUT MISSING...", "Please provide dosage of medicine " + find_patName.getText(),
                    DesktopNotify.INPUT_REQUEST, 8000);
            //   asterisk4.setText("*Dosage required");
            asterisk4.setBorder(BorderFactory.createLineBorder(Color.red));
            asterisk4.setVisible(true);

        } else if (e.isEmpty()) {
            DesktopNotify.showDesktopMessage("INPUT MISSING...", "Please provide medicine type of medicine " + find_patName.getText(),
                    DesktopNotify.INPUT_REQUEST, 8000);
            // asterisk5.setText("*Time required");
            asterisk5.setBorder(BorderFactory.createLineBorder(Color.red));
            asterisk5.setVisible(true);

        } else if (CB_type1.getSelectedItem() == "Set day") {
            // Validation message. 
            DesktopNotify.showDesktopMessage("INPUT MISSING...", "Please select how many day to take the medicine " + find_patName.getText(),
                    DesktopNotify.INPUT_REQUEST, 8000);
            asterisk8.setBorder(BorderFactory.createLineBorder(Color.red));
            asterisk8.setVisible(true);
        } else if (((JTextField) nxt_vst.getDateEditor().getUiComponent()).getText().isEmpty()) {
            // Validation message. 
            DesktopNotify.showDesktopMessage("INPUT MISSING...", "Please select date for the next visit of patient " + find_patName.getText(),
                    DesktopNotify.INPUT_REQUEST, 8000);
            asterisk9.setBorder(BorderFactory.createLineBorder(Color.red));
            asterisk9.setVisible(true);
        } else {
            try {

                //   String query = "insert into Core1_opd_patientFindings (name,age,gender,patContact,doctor_name,specialization,bp,temp,height,weight,dateTime )  values(?,?,?,?,?,?,?,?,?,?,?)";
                String query = "insert into Core1_opd_consultationProgress (findings_no,name,age,gender,patContact,patient_illness,doctor_name,specialization,bp,temp,height,weight,dateTime,"
                        + "date_sysmptoms,symp_desc,diagnose,diagnose_others,date_diagnose,diag_desc,medicine,medicine_others,dosage,tablet,take,until,med_desc,status) "
                        + "values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
              //  String query = "insert into Core1_opd_consultationProgress values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

                pst = con.prepareStatement(query);

                pst.setString(1, consult_id.getText());
                pst.setString(2, find_patName.getText());
                pst.setString(3, find_patAge.getText());
                pst.setString(4, find_patGender.getText());
                pst.setString(5, find_patNo.getText());
                pst.setString(6, find_patSick.getText());
                pst.setString(7, find_patDr.getText());
                pst.setString(8, find_drSpecia.getText());
                pst.setString(9, bp.getText());
                pst.setString(10, bt.getText());
                pst.setString(11, h.getText());
                pst.setString(12, w.getText());
                pst.setString(13, dd.getText());
                pst.setString(14, ((JTextField) symptoms_date.getDateEditor().getUiComponent()).getText());
                pst.setString(15, jTextArea1.getText());

                String diagnose;
                diagnose = CB_type2.getSelectedItem().toString();
                pst.setString(16, diagnose);
                pst.setString(17, diagnose + ": " + otherD2.getText());

                pst.setString(18, date_dayv2.getText());
                pst.setString(19, jTextArea2.getText());

                String med;
                med = CB_type3.getSelectedItem().toString();
                pst.setString(20, med);     
                pst.setString(21, med + othersMed2.getText());
                
                pst.setString(22, medDosage.getText());
                pst.setString(23, medType.getText());
                pst.setString(24, take.getText());
                String take_until;
                take_until = CB_type1.getSelectedItem().toString();
                pst.setString(25, take_until);
                pst.setString(26, jTextArea3.getText());
                pst.setString(27, "Done consultation");
                pst.setString(28, "Outpatient");
                pst.setString(29, pat_ID.getText());
                pst.execute();
                try {

                    String query2 = "update Core1_opd_consultlist set status = 'Done Consultation' where name='" + find_patName.getText() + "' and Consultation_ID = '" + consult_id.getText() + "' ";

                    java.sql.Statement st = null;

                    st = con.createStatement();
                    st.executeUpdate(query2);

                } catch (Exception err) {
                    JOptionPane.showMessageDialog(null, err);
                }
                try {

                    String query2 = "update Core1_opd_consultwaiting set status = 'Done Consultation' where name='" + find_patName.getText() + "' and vitalSigns_no = '" + consult_id.getText() + "'  ";

                    java.sql.Statement st = null;

                    st = con.createStatement();
                    st.executeUpdate(query2);

                } catch (Exception err) {
                    JOptionPane.showMessageDialog(null, err);
                }
                try {

                    String query3 = "insert into Core1_PR_Overview (patient_ID,name,gender,date_undergo,date_nxt_visit,patient_type) values (?,?,?,?,?,?)";

                    pst = con.prepareStatement(query3);

                    pst.setString(1, pat_ID.getText());
                    pst.setString(2, find_patName.getText());
                    pst.setString(3, find_patGender.getText());
                    pst.setString(4, date_dayv2.getText());
                    pst.setString(5, ((JTextField) nxt_vst.getDateEditor().getUiComponent()).getText());
                    pst.setString(6, "Outpatient");
                    pst.execute();

                } catch (Exception err) {
                    JOptionPane.showMessageDialog(null, err);
                }
            } catch (Exception r) {
                JOptionPane.showMessageDialog(null, r);
                //"Not Saved!, please check your remaining filled"
            }

            //  JOptionPane.showMessageDialog(null, "Patient done consultation");
            DesktopNotify.showDesktopMessage("DONE CONSULTATION...", "Please remind for the date of next consultation of " + find_patName.getText() + "",
                    DesktopNotify.SUCCESS, 8000);
            consult();
            find_patName.setText("");
            pat_ID.setText("");
            find_patAge.setText("");
            find_patGender.setText("");
            find_patNo.setText("");
            find_patDr.setText("");
            find_drSpecia.setText("");
            bp.setText("");
            bt.setText("");
            h.setText("");
            w.setText("");
            consult_id.setText("");
            dd.setText("");
            find_patSick.setText("");
            jTextArea1.setText("");
            jTextArea2.setText("");
            otherD.setText("");
            jTextArea3.setText("");
            othersMed.setText("");
            medDosage.setText("");
            medType.setText("");
            date_dayv2.setText("");
            take.setText("");
            symptoms_date.setDate(null);
            nxt_vst.setDate(null);
            CB_type2.setSelectedItem("Choose");
            CB_type3.setSelectedItem("Others");
            CB_type1.setSelectedItem("Set day");

//            new Consultation().setVisible(true);
//            setVisible(false);
        }
    }//GEN-LAST:event_consultBtnActionPerformed

    private void medTypeKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_medTypeKeyReleased
    {//GEN-HEADEREND:event_medTypeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_medTypeKeyReleased

    private void otherD2KeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_otherD2KeyReleased
    {//GEN-HEADEREND:event_otherD2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_otherD2KeyReleased

    private void othersMed2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_othersMed2ActionPerformed
    {//GEN-HEADEREND:event_othersMed2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_othersMed2ActionPerformed

    private void asterisk8KeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_asterisk8KeyPressed
    {//GEN-HEADEREND:event_asterisk8KeyPressed

    }//GEN-LAST:event_asterisk8KeyPressed

    private void asterisk8KeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_asterisk8KeyReleased
    {//GEN-HEADEREND:event_asterisk8KeyReleased

    }//GEN-LAST:event_asterisk8KeyReleased

    private void asterisk8AncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_asterisk8AncestorAdded
    {//GEN-HEADEREND:event_asterisk8AncestorAdded
//       CB_type1.setSelectedIndex(0);
//        asterisk8.setVisible(false);
    }//GEN-LAST:event_asterisk8AncestorAdded

    private void asterisk8MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_asterisk8MouseClicked
    {//GEN-HEADEREND:event_asterisk8MouseClicked
//     CB_type1.setSelectedIndex(1);
//    asterisk8.setVisible(false);
    }//GEN-LAST:event_asterisk8MouseClicked

    private void asterisk8MouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_asterisk8MouseReleased
    {//GEN-HEADEREND:event_asterisk8MouseReleased

    }//GEN-LAST:event_asterisk8MouseReleased

    private void asterisk8MousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_asterisk8MousePressed
    {//GEN-HEADEREND:event_asterisk8MousePressed
        CB_type1.setSelectedIndex(0);
        asterisk8.setVisible(false);
    }//GEN-LAST:event_asterisk8MousePressed

    private void jTextArea1AncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_jTextArea1AncestorAdded
    {//GEN-HEADEREND:event_jTextArea1AncestorAdded
        jTextArea1.setLineWrap(true);
        jTextArea1.setWrapStyleWord(true);
    }//GEN-LAST:event_jTextArea1AncestorAdded

    private void medDosageActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_medDosageActionPerformed
    {//GEN-HEADEREND:event_medDosageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medDosageActionPerformed

    private void CB_type4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CB_type4ActionPerformed
    {//GEN-HEADEREND:event_CB_type4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CB_type4ActionPerformed

    private void jCheckBox46ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBox46ActionPerformed
    {//GEN-HEADEREND:event_jCheckBox46ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox46ActionPerformed

    private void cb3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cb3ActionPerformed
    {//GEN-HEADEREND:event_cb3ActionPerformed
        ((JLabel) cb3.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }//GEN-LAST:event_cb3ActionPerformed

    private void cb2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cb2ActionPerformed
    {//GEN-HEADEREND:event_cb2ActionPerformed
        ((JLabel) cb2.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }//GEN-LAST:event_cb2ActionPerformed

    private void cb1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cb1ActionPerformed
    {//GEN-HEADEREND:event_cb1ActionPerformed
        ((JLabel) cb1.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }//GEN-LAST:event_cb1ActionPerformed

    private void cbActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbActionPerformed
    {//GEN-HEADEREND:event_cbActionPerformed
        ((JLabel) cb.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);

    }//GEN-LAST:event_cbActionPerformed

    private void CB_typeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CB_typeActionPerformed
    {//GEN-HEADEREND:event_CB_typeActionPerformed

        if (CB_type.getSelectedItem().equals("Consultation")) {
            CONSULTATION_PANEL.setVisible(true);
            LABORATORY_PANEL.setVisible(false);
            vs.setVisible(true);
            bmi.setVisible(true);
            CB_type.setSelectedIndex(0);

            consultBtn.setVisible(true);
            labBtn.setVisible(false);

        } else if (CB_type.getSelectedItem().equals("Request Laboratory")) {
            LABORATORY_PANEL.setVisible(true);
            CONSULTATION_PANEL.setVisible(false);
            labBtn.setVisible(true);
            consultBtn.setVisible(false);
            vs.setVisible(false);
            bmi.setVisible(false);

        }
    }//GEN-LAST:event_CB_typeActionPerformed

    private void labBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_labBtnActionPerformed
    {//GEN-HEADEREND:event_labBtnActionPerformed

        try {

            String query = "insert into Core2_labmngt_labreq(Dummy) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

            pst = con.prepareStatement(query);

            pst.setString(1, consult_id.getText());
            pst.setString(2, find_patName.getText());
            pst.setString(3, find_patAge.getText());
            pst.setString(4, find_patGender.getText());
            pst.setString(5, find_patNo.getText());
            pst.setString(6, find_patSick.getText());
            pst.setString(7, find_patDr.getText());
            pst.setString(8, dd.getText());
            String hema = "";
            if (jCheckBox1.isSelected()) {
                hema += jCheckBox1.getText() + ", ";
            }
            if (jCheckBox2.isSelected()) {
                hema += jCheckBox2.getText() + ", ";
            }
            if (jCheckBox3.isSelected()) {
                hema += jCheckBox3.getText() + ", ";
            }
            if (jCheckBox4.isSelected()) {
                hema += jCheckBox4.getText() + ", ";
            }
            if (jCheckBox5.isSelected()) {
                hema += jCheckBox5.getText() + ", ";
            }
            if (jCheckBox6.isSelected()) {
                hema += jCheckBox6.getText() + ", ";
            }
            if (jCheckBox7.isSelected()) {
                hema += jCheckBox7.getText() + ", ";
            }
            if (jCheckBox8.isSelected()) {
                hema += jCheckBox8.getText() + ", ";
            }
            if (jCheckBox9.isSelected()) {
                hema += jCheckBox9.getText() + ", ";
            }
            if (jCheckBox18.isSelected()) {
                hema += jCheckBox18.getText() + ", ";
            }
            pst.setString(9, hema);

            String bloodChem = "";
            if (jCheckBox10.isSelected()) {
                bloodChem += jCheckBox10.getText() + " ";
            }
            if (jCheckBox11.isSelected()) {
                bloodChem += jCheckBox11.getText() + ", ";
            }
            if (jCheckBox12.isSelected()) {
                bloodChem += jCheckBox12.getText() + ", ";
            }
            if (jCheckBox14.isSelected()) {
                bloodChem += jCheckBox14.getText() + ", ";
            }
            if (jCheckBox15.isSelected()) {
                bloodChem += jCheckBox15.getText() + ", ";
            }
            if (jCheckBox16.isSelected()) {
                bloodChem += jCheckBox16.getText() + ", ";
            }
            if (jCheckBox17.isSelected()) {
                bloodChem += jCheckBox17.getText() + ", ";
            }
            if (jCheckBox19.isSelected()) {
                bloodChem += jCheckBox19.getText() + ", ";
            }
            if (jCheckBox21.isSelected()) {
                bloodChem += jCheckBox21.getText() + ", ";
            }

            pst.setString(10, bloodChem);
            String micro = "";
            if (jCheckBox22.isSelected()) {
                micro += jCheckBox22.getText() + " ";
            }
            if (jCheckBox23.isSelected()) {
                micro += jCheckBox23.getText() + ", ";
            }
            if (jCheckBox24.isSelected()) {
                micro += jCheckBox24.getText() + ", ";
            }
            if (jCheckBox25.isSelected()) {
                micro += jCheckBox25.getText() + ", ";
            }
            if (jCheckBox26.isSelected()) {
                micro += jCheckBox26.getText() + ", ";
            }
            if (jCheckBox27.isSelected()) {
                micro += jCheckBox27.getText() + ", ";
            }
            if (jCheckBox28.isSelected()) {
                micro += jCheckBox28.getText() + ", " + "LMP:" + ((JTextField) LMP.getDateEditor().getUiComponent()).getText() + ", ";
            }
            if (jCheckBox31.isSelected()) {
                micro += jCheckBox31.getText() + ", ";
            }
            pst.setString(11, micro);

            String electro = "";
            if (jCheckBox13.isSelected()) {
                electro += jCheckBox13.getText() + ", ";
            }
            if (jCheckBox20.isSelected()) {
                electro += jCheckBox20.getText() + ", ";
            }
            if (jCheckBox29.isSelected()) {
                electro += jCheckBox29.getText() + ", ";
            }
            if (jCheckBox30.isSelected()) {
                electro += jCheckBox30.getText() + ", ";
            }
            pst.setString(12, electro);

            String thyroid = "";
            if (jCheckBox37.isSelected()) {
                thyroid += jCheckBox37.getText() + ", ";
            }
            if (jCheckBox38.isSelected()) {
                thyroid += jCheckBox38.getText() + ", ";
            }
            if (jCheckBox39.isSelected()) {
                thyroid += jCheckBox39.getText() + ", ";
            }

            pst.setString(13, thyroid);

            String serology = "";
            if (jCheckBox41.isSelected()) {
                serology += jCheckBox41.getText() + ", ";
            }
            if (jCheckBox42.isSelected()) {
                serology += jCheckBox42.getText() + ", ";
            }
            if (jCheckBox43.isSelected()) {
                serology += jCheckBox43.getText() + ", ";
            }
            pst.setString(14, serology);

            String radiology = "";
            if (jCheckBox32.isSelected()) {
                radiology += jCheckBox32.getText() + ", ";
            }
            if (jCheckBox33.isSelected()) {
                radiology += jCheckBox33.getText() + ", " + "Reason:" + cb.getSelectedItem().toString() + ", ";
            }
            if (jCheckBox34.isSelected()) {
                radiology += jCheckBox34.getText() + ", " + "Reason:" + cb1.getSelectedItem().toString() + ", ";
            }
            if (jCheckBox35.isSelected()) {
                radiology += jCheckBox35.getText() + ", " + "Reason:" + cb2.getSelectedItem().toString() + ", ";
            }
            if (jCheckBox36.isSelected()) {
                radiology += jCheckBox36.getText() + ", ";
            }
            if (jCheckBox40.isSelected()) {
                radiology += jCheckBox40.getText() + ", " + "Protocol:" + cb3.getSelectedItem().toString() + ", ";
            }
            if (jCheckBox46.isSelected()) {
                radiology += jCheckBox46.getText() + ", ";
            }
            pst.setString(15, radiology);
            pst.setString(16, jTextArea1.getText());
            pst.setString(17, "Pending laboratory");

            pst.execute();
            JOptionPane.showMessageDialog(null, "Laboratory successfully Requested");
        } catch (Exception err) {
            JOptionPane.showMessageDialog(null, err);
        }
    }//GEN-LAST:event_labBtnActionPerformed

    private void CB_typeAncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_CB_typeAncestorAdded
    {//GEN-HEADEREND:event_CB_typeAncestorAdded
        CB_type.setSelectedIndex(0);
    }//GEN-LAST:event_CB_typeAncestorAdded

    private void pat_IDActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_pat_IDActionPerformed
    {//GEN-HEADEREND:event_pat_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pat_IDActionPerformed

    private void nxt_vstAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_nxt_vstAncestorAdded

        //    d.setText("Todaydate"+((JTextField) bday.getDateEditor().getUiComponent()).getText());

    }//GEN-LAST:event_nxt_vstAncestorAdded

    private void nxt_vstMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nxt_vstMousePressed

        // TODO add your handling code here:
    }//GEN-LAST:event_nxt_vstMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(findings.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(findings.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(findings.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(findings.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new findings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CB_type;
    private javax.swing.JComboBox<String> CB_type1;
    private javax.swing.JComboBox<String> CB_type2;
    private javax.swing.JComboBox<String> CB_type3;
    private javax.swing.JComboBox<String> CB_type4;
    private javax.swing.JPanel CONSULTATION_PANEL;
    private javax.swing.JPanel Change_GUI;
    private javax.swing.JPanel Diagnosis;
    private javax.swing.JPanel Findings_pnl;
    private javax.swing.JPanel History;
    private javax.swing.JPanel LABORATORY_PANEL;
    private com.toedter.calendar.JDateChooser LMP;
    private javax.swing.JPanel OthersDisableMed;
    private javax.swing.JPanel OthersEnableMed;
    private javax.swing.JPanel Symptoms;
    private javax.swing.JPanel Treatment;
    private javax.swing.JLabel asterisk1;
    private javax.swing.JLabel asterisk2;
    private javax.swing.JLabel asterisk3;
    private javax.swing.JLabel asterisk4;
    private javax.swing.JLabel asterisk5;
    private javax.swing.JLabel asterisk6;
    private javax.swing.JLabel asterisk7;
    private javax.swing.JLabel asterisk8;
    private javax.swing.JLabel asterisk9;
    private javax.swing.JPanel bmi;
    public static javax.swing.JTextField bp;
    public static javax.swing.JTextField bt;
    private javax.swing.JComboBox<String> cb;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JComboBox<String> cb2;
    private javax.swing.JComboBox<String> cb3;
    private javax.swing.JButton consultBtn;
    public static javax.swing.JTextField consult_id;
    public static javax.swing.JTextField date_dayv2;
    public static javax.swing.JTextField dd;
    private javax.swing.JPanel disable;
    private javax.swing.JPanel enable;
    public static javax.swing.JTextField find_drSpecia;
    public static javax.swing.JTextField find_patAge;
    public static javax.swing.JTextField find_patDr;
    public static javax.swing.JTextField find_patGender;
    public static javax.swing.JTextField find_patName;
    public static javax.swing.JTextField find_patNo;
    public static javax.swing.JTextField find_patSick;
    public static javax.swing.JTextField h;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox24;
    private javax.swing.JCheckBox jCheckBox25;
    private javax.swing.JCheckBox jCheckBox26;
    private javax.swing.JCheckBox jCheckBox27;
    private javax.swing.JCheckBox jCheckBox28;
    private javax.swing.JCheckBox jCheckBox29;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox30;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox32;
    private javax.swing.JCheckBox jCheckBox33;
    private javax.swing.JCheckBox jCheckBox34;
    private javax.swing.JCheckBox jCheckBox35;
    private javax.swing.JCheckBox jCheckBox36;
    private javax.swing.JCheckBox jCheckBox37;
    private javax.swing.JCheckBox jCheckBox38;
    private javax.swing.JCheckBox jCheckBox39;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox40;
    private javax.swing.JCheckBox jCheckBox41;
    private javax.swing.JCheckBox jCheckBox42;
    private javax.swing.JCheckBox jCheckBox43;
    private javax.swing.JCheckBox jCheckBox46;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JButton jExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JButton labBtn;
    public static javax.swing.JTextField medDosage;
    public static javax.swing.JTextField medType;
    public static javax.swing.JTextField medicine;
    private javax.swing.JPanel medicineDisable;
    private javax.swing.JPanel medicineEnable;
    private com.toedter.calendar.JDateChooser nxt_vst;
    public static javax.swing.JTextField otherD;
    public static javax.swing.JTextField otherD2;
    public static javax.swing.JTextField othersMed;
    public static javax.swing.JTextField othersMed2;
    public static javax.swing.JTextField pat_ID;
    private com.toedter.calendar.JDateChooser symptoms_date;
    public static javax.swing.JTextField take;
    private javax.swing.JTable tbl_view;
    private javax.swing.JPanel vs;
    public static javax.swing.JTextField w;
    // End of variables declaration//GEN-END:variables
}
