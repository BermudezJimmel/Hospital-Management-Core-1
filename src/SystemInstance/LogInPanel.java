/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SystemInstance;

import Notifications.DesktopNotify;
import static SystemInstance.MainScreen.imahe;
//import SubModules.AppRegForm;
import java.awt.Image;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.sf.jcarrierpigeon.WindowPosition;
import net.sf.jtelegraph.Telegraph;
import net.sf.jtelegraph.TelegraphQueue;
import net.sf.jtelegraph.TelegraphType;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author jerome
 */
public class LogInPanel extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    int attempt = 1;

    public LogInPanel() {
        initComponents();
        conn = MysqlConnect.ConnectDB();
        setBackground(new Color(0, 0, 0, 0));
    }
    private ImageIcon format;
    String imgname = null;
    byte[] imge = null;

    public void audio() {
        InputStream in;
        try {

           in = new FileInputStream(new File("C:\\Users\\iRHONman\\Desktop\\PS1\\Template\\undone\\src\\VoiceOverNotif\\VoiceOver\\SystemUserLogIn.wav"));

            AudioStream audios = new AudioStream(in);
            AudioPlayer.player.start(audios);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        save = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(680, 470));
        setUndecorated(true);
        getContentPane().setLayout(null);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_Male_User_70px.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(405, 90, 70, 70);

        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("User name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(350, 195, 62, 16);

        user.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        user.setForeground(new java.awt.Color(255, 255, 255));
        user.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        user.setBorder(null);
        user.setCaretColor(new java.awt.Color(255, 255, 255));
        user.setOpaque(false);
        user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userMouseClicked(evt);
            }
        });
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        user.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userKeyTyped(evt);
            }
        });
        getContentPane().add(user);
        user.setBounds(350, 215, 170, 30);

        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("Password");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(350, 260, 58, 16);

        password.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        password.setForeground(new java.awt.Color(255, 255, 255));
        password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        password.setBorder(null);
        password.setCaretColor(new java.awt.Color(255, 255, 255));
        password.setOpaque(false);
        password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordMouseClicked(evt);
            }
        });
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordKeyTyped(evt);
            }
        });
        getContentPane().add(password);
        password.setBounds(350, 280, 170, 30);

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(350, 250, 170, 10);

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(350, 315, 170, 10);

        save.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        save.setForeground(new java.awt.Color(0, 153, 102));
        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_Ok_25px_1.png"))); // NOI18N
        save.setText("Applicant Sign Up");
        save.setBorder(null);
        save.setContentAreaFilled(false);
        save.setFocusable(false);
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveMouseExited(evt);
            }
        });
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save);
        save.setBounds(356, 340, 160, 40);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/LoginPanel.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 680, 470);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActionPerformed

    private void userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userMouseClicked
        user.setText("");
    }//GEN-LAST:event_userMouseClicked

    private void passwordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordMouseClicked
        password.setText("");
    }//GEN-LAST:event_passwordMouseClicked

    private void passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (attempt < 4) {
                try {
                    String sql = "select * from dbo.SignUP where username = ? and pass = ? ";

                    pst = conn.prepareStatement(sql);

                    pst.setString(1, user.getText());
                    pst.setString(2, password.getText());

                    rs = pst.executeQuery();
                    if (rs.next()) {
                        String type = rs.getString("typelvl");
                        if (type.equals("Applicant")) {
                            JOptionPane.showMessageDialog(null, "LogIn Successfully\n"
                                    + "You're LogIn as " + type);

                            //    ApplicantManagement am = new ApplicantManagement();
                            //    am.setVisible(true);
                            this.dispose();
                        } else if (type.equals("Admin")) {
                            String name = rs.getString("firstname");
                            String ii = rs.getString("App_ID");
                            JOptionPane.showMessageDialog(null, "LogIn Successfully\n"
                                    + "You're LogIn as " + type);
                            //   NewHired nh = new NewHired();
                            //   nh.setVisible(true);
//                                        adp.adminname.setText(name);
//                                        adp.id.setText(ii);
//                                        adp.jLabel1.setText("Admin");
//                                        adp.adduser.setVisible(false);

                            this.dispose();
                            int LONG_DELAY = 3000;

                            Telegraph tele = new Telegraph("LogIn Successfully", "Welcome Admin!",
                                    TelegraphType.NOTIFICATION_DONE, WindowPosition.BOTTOMRIGHT, LONG_DELAY);
                            TelegraphQueue q = new TelegraphQueue();
                            q.add(tele);
                        } else {
                            String name = rs.getString("firstname");
                            String lastname = rs.getString("lastname");
                            //  String ii = rs.getString("App_ID");
                            String typelvl = rs.getString("typelvl");
                            String dep = rs.getString("department");
                            String id = rs.getString("App_ID");

                            try {
                                Date d = new Date();
                                SimpleDateFormat sdft = new SimpleDateFormat("hh:mm:ss a");
                                SimpleDateFormat sdfd = new SimpleDateFormat("MMMM dd, yyyy");
                                String activity = "System Log In";
                                String systemuser = typelvl + " " + name + " " + lastname;
                                String time = sdft.format(d);
                                String date = sdfd.format(d);

                                String query = "insert into SYS_LOG (ACTIVITY,SYS_USER,DATE,TIME)"
                                        + "values(?,?,?,?)";

                                pst = conn.prepareStatement(query);

                                pst.setString(1, activity);
                                pst.setString(2, systemuser);
                                pst.setString(3, date);
                                pst.setString(4, time);

                                pst.execute();

                                //                               SystemLog.root.removeAll();
//                                SystemLog.PanelList();
                            } catch (Exception e) {

                            }
//                            SuccessAlert a = new SuccessAlert(this, true);
//                            a.titulo.setText("LogIn Successfully");
//                            a.msj.setText("You're LogIn as" + type);
//                            a.msj1.setText("Do you want to continue?");
//                            a.setVisible(true);
                            JOptionPane.showMessageDialog(null, "LogIn Successfully\n"
                                    + "You're LogIn as " + type);

                            MainScreen main = new MainScreen();
                            main.setVisible(true);
                            MainScreen.txt_user.setText(name + " " + lastname);
                            MainScreen.POSITION.setText("Super Admin ");
                            MainScreen.Department.setText(dep);
                           MainScreen.id.setText(id);

                            try {
                                String sql2 = "SELECT image  from SignUp where App_ID = '" + id + "'";
                                pst = conn.prepareStatement(sql2);
                                rs = pst.executeQuery();
                                if (rs.next()) {
                                    byte[] imge = rs.getBytes("image");
                                    imahe.setIcon(new ImageIcon(imge));
                                    format = new ImageIcon(imge);
                                    ImageIcon imageIcon = new ImageIcon(new ImageIcon(imge).getImage().getScaledInstance(imahe.getWidth(), imahe.getHeight(), Image.SCALE_DEFAULT));
                                    MainScreen.imahe.setIcon(imageIcon);

                                }

                            } catch (Exception e) {
                                e.printStackTrace();
                            }

                            this.dispose();

                            DesktopNotify.showDesktopMessage("LogIn Successfully", "Welcome Super Admin!",
                                    DesktopNotify.SUCCESS, 8000);
                            audio();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "LogIn Error please Check Username or Password\n"
                                + "Attempt " + attempt + "/3");
                    }
                } catch (Exception e) {
                    System.out.println(e + "Error me dito dito");
                }
            } else if (attempt != 4) {
                JOptionPane.showMessageDialog(null, "LogIn Attempt Error " + attempt);
            } else {
                JOptionPane.showMessageDialog(null, "Sorry the System will close automatically\n"
                        + "LogIn Attempt Exceed " + attempt + "/3");
                this.dispose();
            }
            attempt++;
        }
    }//GEN-LAST:event_passwordKeyPressed

    private void userKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userKeyTyped
        String u = user.getText();
        int b = u.length();
        char c = evt.getKeyChar();
        char a = '&';
        char aa = '-';

        if ((!Character.isJavaIdentifierPart(c) || c == a || c == aa
                || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        } else if (b >= 15) {
            evt.consume();
            int LONG_DELAY = 2000;
            Telegraph tele = new Telegraph("Character Limit Exceeded", "Username should atleast 15 Characters or below",
                    TelegraphType.NOTIFICATION_ERROR, WindowPosition.BOTTOMRIGHT, LONG_DELAY);
            TelegraphQueue q = new TelegraphQueue();
            q.add(tele);
        }
    }//GEN-LAST:event_userKeyTyped

    private void passwordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyTyped
        String u = password.getText();
        int b = u.length();
        char c = evt.getKeyChar();
        char a = '&';
        char aa = '-';

        if ((!Character.isJavaIdentifierPart(c) || c == a || c == aa
                || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        } else if (b >= 15) {
            evt.consume();
            int LONG_DELAY = 2000;
            Telegraph tele = new Telegraph("Character Limit Exceeded", "Password should atleast 15 Characters or below",
                    TelegraphType.NOTIFICATION_ERROR, WindowPosition.BOTTOMRIGHT, LONG_DELAY);
            TelegraphQueue q = new TelegraphQueue();
            q.add(tele);
        }
    }//GEN-LAST:event_passwordKeyTyped

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        //        AppRegForm arf = new AppRegForm();
        //        arf.setVisible(true);
        //        this.dispose();
    }//GEN-LAST:event_saveActionPerformed

    private void saveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseExited
        save.setOpaque(false);
    }//GEN-LAST:event_saveMouseExited

    private void saveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseEntered
        save.setOpaque(true);
        save.setBackground(new Color(204, 255, 204));
    }//GEN-LAST:event_saveMouseEntered

    private void userKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogInPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogInPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogInPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogInPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogInPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton save;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
    private ImageIcon ImageIcon(byte[] pic) {
        throw new UnsupportedOperationException("Not Supported Yet.");
    }
}
